<% provide(:title, @video.title) %>
<% if user_signed_in? %>
  <div class="row mt-3">
    <div class="col-lg-10 m-auto">
      <%= render 'shared/player', video: @video %>
      <div class="video-info-container">
          <h4><%= @video.title %></h4>
          <div class="video-details">
            <span><%= @video.minutes %> Views</span>
            <span>&nbsp; | &nbsp;</span>
            <span><%= time_ago_in_words(@video.created_at) %> ago</span>
            <button type="button" 
                  class="btn btn-secondary share-btn" 
                  data-toggle="modal" 
                  data-target="#iframe-modal">
              Share
            </button>
          </div>
          <hr>
        <div class="user-info">
         <%#= cl_image_tag @video.user.image, client_hints: true, transformation: [
                            { gravity: "auto", width: "50", height: "50", radius: "max", crop: "fill" }] %>
          <%= link_to @video.user.full_name, user_path(@video.user), class: "uploader-link" %>
        </div>
        <div class="video-description mt-3">
          <%= @video.description %>
        </div>
      </div>
    </div>
  </div>
<% else %>
  <%= render 'preview' %>
<% end %>

<div class="modal fade" id="iframe-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Embed Code</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          &lt;iframe width="560" height="315" src="https://www.browzable.com/embeds/<%= @video.id %>" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

<%# <script>
  var video = document.getElementById('video');
  if(Hls.isSupported()) {
    var hls = new Hls();
    hls.loadSource('https://stream.mux.com/gyfWw4q02bQDl4t02QabowO51o5aULyUt01.m3u8?token=eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJneWZXdzRxMDJiUURsNHQwMlFhYm93TzUxbzVhVUx5VXQwMSIsImV4cCI6MTU1NTI2NDM1NCwia2lkIjoiUEFncjAwajZjZ2FVZjdvdE9FMDJId0RlWXpWZENJa0FsRSIsImF1ZCI6InYifQ.sR3MabDjEgj7uHA3-3wMEXsAstYaGyEEYzDmJTJhEsBsEFzBYTA9zsv3Fx7jULoOauL1Een2ir1k4jzjcejJqdo255DeHcKDvI_j7IOd0RnlfED37ZQKdXxbENA9HiYgraycuzjeYh1rRGG5qcsM-PyQ4ieZbnZk6rL-v4NXdOPFW_D3tdsxq60Pw2XPhkvNpRNaPuJ5-CUsW1osv5lcoHFFwNUgT_wmNT-d7DnY2fxQbAQk3vj-81wNmy2fUI0OS3nTFCXWmfBBo96QlnhiEA1y9NBZybjG4W7Jc750eUh6qGVjyk0cA7mccxJBM-1YtQXj1voGDOdQkFwM4ZmdOg');
    hls.attachMedia(video);
    hls.on(Hls.Events.MANIFEST_PARSED,function() {
      video.play();
  });
 }
 // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
 // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element throught the `src` property.
 // This is using the built-in support of the plain video element, without using hls.js.
 // Note: it would be more normal to wait on the 'canplay' event below however on Safari (where you are most likely to find built-in HLS support) the video.src URL must be on the user-driven
 // white-list before a 'canplay' event will be emitted; the last video event that can be reliably listened-for when the URL is not on the white-list is 'loadedmetadata'.
  else if (video.canPlayType('application/vnd.apple.mpegurl')) {
    video.src = 'https://video-dev.github.io/streams/x36xhzz/x36xhzz.m3u8';
    video.addEventListener('loadedmetadata',function() {
      video.play();
    });
  }
</script> %>


